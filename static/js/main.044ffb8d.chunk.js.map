{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","moviesList","map","movie","key","imdbId","API_MOVIES","getMovie","a","fetch","responce","json","result","FindMovie","addMovieToList","useState","setTitle","showError","setShowError","AllInfoMovie","setAllInfoMovie","checkTitle","handleTitle","checkMovie","Response","movies","unshift","Title","Plot","Poster","imdbID","htmlFor","type","id","value","placeholder","classNames","onChange","e","target","onClick","App","setMovieList","useEffect","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.044ffb8d.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ moviesList = [] }) => (\n  <div className=\"movies\">\n    {moviesList.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  moviesList: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const API_MOVIES = `http://www.omdbapi.com/?apikey=6627e870&t=`;\n\nexport async function getMovie(title) {\n  const responce = await fetch(`${API_MOVIES}${title}`);\n  const result = await responce.json();\n  const movie = await result;\n\n  return movie;\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { getMovie } from '../../api/api';\nimport movies from '../../api/movies.json';\n\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ addMovieToList }) => {\n  const [title, setTitle] = useState('');\n  const [showError, setShowError] = useState(false);\n  const [AllInfoMovie, setAllInfoMovie] = useState({});\n\n  const checkTitle = () => {\n    handleTitle();\n    setTitle(() => '');\n  };\n\n  function checkMovie(movie) {\n    if (movie.Response === 'False' || !title || title[0] === ' ') {\n      setShowError(true);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  async function handleTitle() {\n    const movie = await getMovie(title);\n    const isMovie = checkMovie(movie);\n\n    if (isMovie) {\n      return;\n    }\n\n    movies.unshift({\n      title: movie.Title,\n      description: movie.Plot,\n      imgUrl: movie.Poster,\n      imdbId: movie.imdbID,\n      imdbUrl: `https://www.imdb.com/title/${movie.imdbID}/`,\n    });\n    setAllInfoMovie(() => movie);\n  }\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={title}\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': showError })}\n              onChange={(e) => {\n                setTitle(e.target.value);\n                setShowError(false);\n              }}\n            />\n          </div>\n\n          { showError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                checkTitle();\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => addMovieToList(AllInfoMovie)}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard {...movies[0]} />\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovieToList: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport movies from './api/movies.json';\n\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nfunction App() {\n  const [moviesList, setMovieList] = useState([]);\n\n  useEffect(() => {\n    setMovieList(() => [...movies]);\n  }, []);\n\n  function addMovieToList(AllInfoMovie) {\n    const hasSimilarMovie = moviesList\n      .find(movie => movie.title === AllInfoMovie.Title);\n\n    if (hasSimilarMovie) {\n      return;\n    }\n\n    setMovieList(() => ([\n      {\n        title: AllInfoMovie.Title,\n        description: AllInfoMovie.Plot,\n        imgUrl: AllInfoMovie.Poster,\n        imdbId: AllInfoMovie.imdbID,\n        imdbUrl: `https://www.imdb.com/title/${AllInfoMovie.imdbID}/`,\n      },\n      ...moviesList,\n    ]));\n  }\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList moviesList={moviesList} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovieToList={addMovieToList}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}